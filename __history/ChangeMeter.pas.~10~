unit ChangeMeter;

interface

uses
  Windows,
  Messages,
  SysUtils,
  Variants,
  Classes,
  Graphics,
  Controls,
  Forms,
  Dialogs,
  StdCtrls,
  Buttons,
  DBCtrls,
  Grids,
  DBGrids,
  ExtCtrls,
  DB,
  PDJSillyLabel,
  PDJSillyTools,
  CRGrid,
  NxCollection, CRDBGrid1;

type
  TChangeMeterForm = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Edit1: TEdit;
    Option: TRadioGroup;
    PDJSillyLabel1: TButton;
    DBGrid1: TCRDBGrid1;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Edit1Change(Sender: TObject);
    procedure PDJSillyLabel1Click(Sender: TObject);
    procedure OptionClick(Sender: TObject);
    procedure DBGrid1GetCellParams(Sender: TObject; Field: TField;
      AFont: TFont; var Background: TColor; State: TGridDrawState;
      StateEx: TGridDrawStateEx);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ChangeMeterForm: TChangeMeterForm;

implementation

uses Data;

{$R *.dfm}

procedure TChangeMeterForm.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  BillingData.ChangeMeter.Active := False;
  Action := caFree;
  ChangeMeterForm := nil;
end;

procedure TChangeMeterForm.Edit1Change(Sender: TObject);
begin
  with BillingData do
    begin
      case Option.ItemIndex of
        1: ChangeMeter.Locate('AccountNumber',Edit1.Text,[]);
        2: ChangeMeter.Locate('Name',Edit1.Text,[LoPartialkey]);
        3: ChangeMeter.Locate('OldSerialNumber',Edit1.Text,[]);
        4: ChangeMeter.Locate('NewMeterSerial',Edit1.Text,[]);
      end;
    end;
end;

procedure TChangeMeterForm.PDJSillyLabel1Click(Sender: TObject);
begin
  Close;
end;

procedure TChangeMeterForm.DBGrid1GetCellParams(Sender: TObject;
  Field: TField; AFont: TFont; var Background: TColor; State: TGridDrawState;
  StateEx: TGridDrawStateEx);
begin
  if Sender is TCRDBGrid then
  With Sender as TCRDBGrid do
  begin
   if (DataSource.DataSet.RecNo mod 2) = 0 then
     begin
      if Background = clWindow then Background  := clTealShadow;
     end;
  end;
end;

procedure TChangeMeterForm.OptionClick(Sender: TObject);
begin
  with BillingData do
    begin
      case Option.ItemIndex of
        1: ChangeMeter.IndexFieldNames := 'AccountNumber';
        2: ChangeMeter.IndexFieldNames := 'Name';
        3: ChangeMeter.IndexFieldNames := 'OldSerialNumber';
        4: ChangeMeter.IndexFieldNames := 'NewMeterSerial';
      end;
    end;
  Edit1.SetFocus;
end;

end.
